name: Deploy code

on:
  repository_dispatch:
    types: deploy_staging
  push:
    branches:
      - master

jobs:
  debug:
    runs-on: ubuntu-16.04
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"

  deploy:
    runs-on: ubuntu-latest

    env:
      NODE_ENV: production

    steps:
      - uses: actions/checkout@v2

      - name: Read dependencies cache
        uses: actions/cache@v1
        env:
          cache-name: node-modules-cache
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build project
        run: yarn build

      - name: Deploy to staging
        run: ./deploy.sh staging

      - name: Deploy to production
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: ./deploy.sh production
